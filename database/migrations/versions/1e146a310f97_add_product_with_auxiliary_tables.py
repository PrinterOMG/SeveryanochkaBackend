"""Add product with auxiliary tables

Revision ID: 1e146a310f97
Revises: 087137a3838d
Create Date: 2024-02-02 13:00:28.614303

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1e146a310f97'
down_revision: Union[str, None] = '087137a3838d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('brand',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_brand_name'), 'brand', ['name'], unique=False)
    op.create_table('category',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('parent_id', sa.BigInteger(), nullable=True),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['parent_id'], ['category.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('country',
    sa.Column('code', sa.String(length=2), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_country_code'), 'country', ['code'], unique=False)
    op.create_table('manufacturer',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('product',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('price', sa.DECIMAL(), nullable=False),
    sa.Column('original_price', sa.DECIMAL(), nullable=False),
    sa.Column('discount', sa.DECIMAL(), nullable=False),
    sa.Column('stock', sa.DECIMAL(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('volume', sa.Float(), nullable=False),
    sa.Column('volume_type', postgresql.ENUM('items', 'g', 'kg', 'l', name='volume_types_enum'), nullable=False),
    sa.Column('brand_id', sa.BigInteger(), nullable=True),
    sa.Column('manufacturing_country_id', sa.BigInteger(), nullable=False),
    sa.Column('manufacturer_id', sa.BigInteger(), nullable=True),
    sa.Column('category_id', sa.BigInteger(), nullable=False),
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['brand_id'], ['brand.id'], ),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.ForeignKeyConstraint(['manufacturer_id'], ['manufacturer.id'], ),
    sa.ForeignKeyConstraint(['manufacturing_country_id'], ['country.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('product')
    op.drop_table('manufacturer')
    op.drop_index(op.f('ix_country_code'), table_name='country')
    op.drop_table('country')
    op.drop_table('category')
    op.drop_index(op.f('ix_brand_name'), table_name='brand')
    op.drop_table('brand')
    # ### end Alembic commands ###
